@using Keas.Core.Extensions
@using Keas.Core.Models
@model List<EquipmentImportResults>

@{
    ViewData["Title"] = "Upload CSV Equipment File";
}
        <div class="card">
            <div class="card-header-equipment">
                <div class="card-head">
                    <h2>Upload a CSV File for Equipment import</h2>
                </div>
            </div>
            <div class="card-content col-lg-6">
                <form asp-action="UploadEquipment" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <fieldset>
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-10">Select CSV file to upload:</div>
                                </div>
                                <div class="row">
                                    <div class="col-md-10">
                                        <div class="input-group">
                                            <input type="hidden" id="filename" name="filename" value="">
                                            <input type="file" id="file" name="file" class="form-control" accept=".csv">
                                            <div class="input-group-btn">
                                                <input type="submit" value="Upload CSV" class="btn btn-primary" style="margin-left: 5px;">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
        @if (Model == null || Model.Count <= 0)
        {
            <div class="card">
                <div class="card-header-equipment">
                    <div class="card-head">
                        <h2>Instructions/Example</h2>
                    </div>
                </div>
                <div class="card-content">
                    <p>Format of the uploaded CSV file must be followed. Must have the following columns, and only these columns:</p><br>
                    <p><b>EquipmentName<span class="space">,</span>SerialNumber<span class="space">,</span>Make<span class="space">,</span>Model<span class="space">,</span>KerbUser<span class="space">,</span>DateIssued<span class="space">,</span>DateDue<span class="space">,</span>Tag<span class="space">,</span>Type<span class="space">,</span>Notes<span class="space">,</span>Key1<span class="space">,</span>Value1<span class="space">,</span>Key2<span class="space">,</span>Value2<span class="space">,</span>Key3<span class="space">,</span>Value3<span class="space">,</span>Key4<span class="space">,</span>Value4<span class="space">,</span>Key5<span class="space">,</span>Value5<span class="space">,</span>Key6<span class="space">,</span>Value6</b></p>
                    <p>Text above copies properly. If you type the list out, omit the space after the commas.</p> 
                    <p>Or you can use the example <a href="@Url.Content("~/files/csv_equipment_example.csv")" class="btn btn-info" role="button">CSV file.</a></p>
                    <dl>
                        <dt>EquipmentName</dt>
                        <dd>Required - Description of Equipment item. Because name is not required to be unique, a new item will be created for each line. Maximum 64 characters long.</dd>
                        <dt>SerialNumber</dt>
                        <dd>Serial number for this item.</dd>
                        <dt>Make</dt>
                        <dd>Make/manufacturer for this item.</dd>
                        <dt>Model</dt>
                        <dd>Model for this item.</dd>
                        <dt>KerbUser</dt>
                        <dd>Kerberos ID of the person this serial is assigned to. May be left blank. If no ID provided, no assignment will be created</dd>
                        <dt>DateIssued</dt>
                        <dd>Date this item was issued to the person. If missing, system will use import date.</dd>
                        <dt>DateDue</dt>
                        <dd>Date this item should be returned</dd>
                        <dt>Tag</dt>
                        <dd>List of tags for this item. If more than one tag, add each separated by comma, with the entire set surrounded by quotation marks. Tags must be added to team in order to filter by them, <a asp-controller="TagsManager" asp-action="Index">Team Tags</a> . All imported items will have "Imported" added as a tag. If you wish to search by this tag, please add it to your team's tags.</dd>
                        <dt>Type</dt>
                        <dd>Optional Equipment type. If not supplied, "Default" will be used. Possible Values: @(string.Join(", ", EquipmentTypes.Types))</dd>
                        <dt>Notes</dt>
                        <dd>Optional.</dd>
                        <dt>Key(1-6)</dt>
                        <dd>Attribute key to be added to this item. You may add up to 6 attributes.</dd>
                        <dt>Value(1-6)</dt>
                        <dd>Attribute value to be added to this item.</dd>
                    </dl>
                </div>
            </div>
        }
  
    @if (Model != null && Model.Count > 0)
    {
        <div style="padding-top: 15px">
            <div class="card">
                <div class="card-header-equipment">
                    <div class="card-head">
                        <h2>Import Results</h2>
                    </div>
                </div>
                <div class="card-content">
                    <table id="results" class="table dataTable">
                        <thead>
                            <tr>
                                <th rowspan="2">Row</th>
                                <th rowspan="2">Success</th>
                                <th colspan="5">CSV Imported Values</th>
                                <th rowspan="2">Messages</th>
                                <th rowspan="2">Errors</th>
                            </tr>
                            <tr>
                                <th>EquipmentName</th>
                                <th>SerialNumber</th>
                                <th>KerbUser</th>
                                <th>DateIssued</th>
                                <th>DateDue</th>
                                <th>Make</th>
                                <th>Model</th>
                                <th>Tag(s)</th>
                                <th>Type</th>
                                <th>Notes</th>
                                <th>Key 1</th>
                                <th>Value 1</th>
                                <th>Key 2</th>
                                <th>Value 2</th>
                                <th>Key 3</th>
                                <th>Value 3</th>
                                <th>Key 4</th>
                                <th>Value 4</th>
                                <th>Key 5</th>
                                <th>Value 5</th>
                                <th>Key 6</th>
                                <th>Value 6</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var style = string.Empty;
                                if (!item.Success)
                                { style = "background-color: lightcoral"; }
                                <tr style="@style">
                                    <td>@item.LineNumber</td>
                                    <td>
                                        @item.Success.ToYesNoString()
                                    </td>
                                    <td style="word-wrap: break-word; word-break: break-all; white-space: normal;">
                                        @Html.DisplayFor(a => item.Import.EquipmentName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(a => item.Import.SerialNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(a => item.Import.KerbUser)
                                    </td>
                                    <td>
                                        @item.Import.DateIssued.Format("d")
                                    </td>
                                    <td>
                                        @item.Import.DateDue.Format("d")
                                    </td>
                                    <td>
                                        @string.Join(", ", item.Messages)
                                    </td>
                                    <td>
                                        @string.Join(", ", item.ErrorMessage)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(a => item.Import.Make)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(a => item.Import.Model)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(a => item.Import.Tag)
                                    </td>
                                    <td>@Html.DisplayFor(a => item.Import.Type)</td>
                                    <td>@Html.DisplayFor(a => item.Import.Notes)</td>
                                    <td>
                                        @item.Import.Key1 
                                    </td>
                                    <td>
                                        @item.Import.Value1
                                    </td>
                                     <td>
                                        @item.Import.Key2 
                                    </td>
                                    <td>
                                         @item.Import.Value2
                                    </td>
                                    <td>
                                        @item.Import.Key3 
                                    </td>
                                    <td>
                                        @item.Import.Value3
                                    </td>
                                    <td>
                                        @item.Import.Key4 
                                    </td>
                                    <td>
                                        @item.Import.Value4
                                    </td>
                                    <td>
                                        @item.Import.Key5 
                                    </td>
                                    <td>
                                        @item.Import.Value5
                                    </td>
                                    <td>
                                        @item.Import.Key6 
                                    </td>
                                    <td>
                                        @item.Import.Value6
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
     @{await Html.RenderPartialAsync("_ImportJS");}
     <script type="text/javascript">
        $(function () {
            $("#results").dataTable({
                "dom": 'lBfrtip',
                "buttons": [
                    { extend: 'copyHtml5' },
                    { extend: 'excelHtml5' },
                    { extend: 'csvHtml5' },
                    { extend: 'print'},
                ],
                "columnDefs": [
                    { "width": "10%;", "targets": [2] },
                    { "type": "date", "targets": [5, 6] },
                    { "targets" : [ 9, 10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25], "visible" : false}
                ]
            });
        });
    </script>
}

@section Styles {
    @await Html.PartialAsync("_ImportResultsStylePartial")
}

