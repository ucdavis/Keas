@using Keas.Core.Domain
@model Keas.Core.Domain.Team

@{
    ViewBag.Title = "Help";
}

<div class="card">
    <div class="card-header-primary">
        <div class="row justify-content-between">
            <div class="card-head">
                <h2>Contacts</h2>
            </div>
            <div class="card-head">
            </div>
        </div>
    </div>
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.DepartmentalAdmin, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card primary-color">
                <div class="card-header-primary-thick">
                    <div class="card-head">
                        <h2><i class="fas fa-users fa-xs"></i> Team Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.DepartmentalAdmin, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.PersonManager, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card people-color">
                <div class="card-header-people">
                    <div class="card-head">
                        <h2><i class="fas fa-hdd fa-xs"></i> Person Manager</h2>
                        <p class="help-block">The people listed here can edit the details about individuals in the team. If you have a question about an assignment, try one of the other admins.</p>
                    </div>
                </div>
                <table class="table">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.PersonManager, StringComparison.OrdinalIgnoreCase)))
                    {
                        <tr>
                            <td>@item.User.Name</td>
                            <td>@Html.DisplayFor(a => item.User.Email)</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.EquipmentMaster, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card equipment-color">
                <div class="card-header-equipment">
                    <div class="card-head">
                        <h2><i class="fas fa-hdd fa-xs"></i> Equipment Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.EquipmentMaster, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.AccessMaster, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card access-color">
                <div class="card-header-access">
                    <div class="card-head">
                        <h2><i class="fas fa-address-card fa-xs"></i> Access Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.AccessMaster, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.KeyMaster, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card keys-color">
                <div class="card-header-keys">
                    <div class="card-head">
                        <h2><i class="fas fa-key fa-xs"></i> Key Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.KeyMaster, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.SpaceMaster, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card equipment-color">
                <div class="card-header-equipment">
                    <div class="card-head">
                        <h2><i class="fas fa-building fa-xs"></i> Space/Workstation Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.SpaceMaster, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.TeamPermissions.Any(a => a.Role.Name.Equals(Role.Codes.DocumentMaster, StringComparison.OrdinalIgnoreCase)))
    {
        <div class="card-content">
            <div class="card equipment-color">
                <div class="card-header-equipment">
                    <div class="card-head">
                        <h2><i class="fas fa-building fa-xs"></i> Document (DocuSign) Admin</h2>
                    </div>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeamPermissions.Where(a => a.Role.Name.Equals(Role.Codes.DocumentMaster, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr>
                                <td>@item.User.Name</td>
                                <td>@Html.DisplayFor(a => item.User.Email)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<div class="card">
    <div class="card-header-primary">
        <div class="row justify-content-between">
            <div class="card-head">
                <h2>Technical Support</h2>
                <div>Version: @ViewBag.Version</div>
            </div>
        </div>
    </div>
    <div class="card-content">
        <a asp-action="MyContacts" class="btn  btn-primary" style="background-color: green">Question about your stuff?</a>
        <a href="https://feedback.ucdavis.edu/app/Peaks" class="btn btn-primary" target="_blank" ref="noopener noreferrer">Make a Suggestion</a>
        <a href=@($"https://caeshelp.ucdavis.edu/?appname=Peaks&team={@Model.Slug}") class="btn btn-primary" target="_blank" ref="noopener noreferrer">Create Help Ticket</a>
        <a href="https://computing.caes.ucdavis.edu/documentation/peaks" class="btn btn-primary" target="_blank" ref="noopener noreferrer">FAQ</a>
    </div>
</div>
